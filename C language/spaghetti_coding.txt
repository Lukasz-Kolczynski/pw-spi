/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include <stdlib.h>

double getMaxDouble(double * tab, unsigned int size);
int getMaxInt(int * tab, unsigned int size);

int main(void)
{
int tabOfInts[] = {3, 2, 1, 5, 6, 4};
double tabOfDoubles[] = {3.3, 2.2, 1.1, 5.5, 6.6, 4.4};

printf("max=%d\n", getMaxInt(tabOfInts, 6));
printf("max=%f\n", getMaxDouble(tabOfDoubles, 6));

    return EXIT_SUCCESS;
}

int getMaxInt(int *tab, unsigned int size){
    int i;
    int max = tab[0];
    
    for(i=0; i<size; i++){
        if (tab[i] > max){
            max = tab[i];
            
        }
        
    }
    return max;

}

double getMaxDouble(double *tab, unsigned int size){
    int i;
    double max = tab[0];
    
    for(i=0; i<size; i++){
        if (tab[i] > max){
            max = tab[i];
            
        }
        
    }
    return max;

}



napisz program w jezyku c gdzie
dana jest tablica intów (10)
w zaleznosci od wywołania:
PROGRAM min znajdzie minimalne
PROGRAM inRange wypisze wszystkie wartosci o indeksach w podanym zakresie min max T/F T/F
np dana bedzie tablica [1,2,3,4,5,6]
i bedzie wywolanie PROGRAM inRange 1 3 T F wypisze liczby 2 i 3  
albo np PROGRAM inRange 1 5 T T wypisze liczby 2  3  4 5 6



#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>


int findMin(int arr[], int size) {
    int min = arr[0];
    for (int i = 1; i < size; i++) {
        if (arr[i] < min) {
            min = arr[i];
        }
    }
    return min;
}


void printInRange(int arr[], int size, int minIndex, int maxIndex, int includeMin, int includeMax) {
    if (minIndex < 0 || maxIndex >= size || minIndex > maxIndex) {
        printf("Niepoprawny zakres.\n");
        return;
    }
    for (int i = minIndex + includeMin; i <= maxIndex - includeMax; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main(int argc, char *argv[]) {
    int arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    int size = sizeof(arr) / sizeof(arr[0]);

    if (argc < 2) {
        printf("Podaj komendę (np. inRange 1 5 T T lub min).\n");
        return 1;
    }

    char *command = argv[1];

    for (int i = 0; command[i]; i++) {
        command[i] = tolower(command[i]);
    }


    if (strcmp(command, "inrange") == 0 && argc == 6) {
        int minIndex = atoi(argv[2]);
        int maxIndex = atoi(argv[3]);
        char includeMinChar = argv[4][0];
        char includeMaxChar = argv[5][0];

        int includeMin = (includeMinChar == 'F' || includeMinChar == 'f') ? 1 : 0;
        int includeMax = (includeMaxChar == 'F' || includeMaxChar == 'f') ? 1 : 0;

        printf("Elementy w podanym zakresie: ");
        printInRange(arr, size, minIndex, maxIndex, includeMin, includeMax);
    } else if (strcmp(command, "min") == 0 && argc == 2) {
        printf("Minimalna wartość: %d\n", findMin(arr, size));
    } else {
        printf("Niepoprawna komenda lub błędna liczba argumentów.\n");
        return 1;
    }

    return 0;
}
